#!/usr/bin/env bash
#
# Usage: push
#
# Send your local branch changes to the remote branch,
#
# Any extra args to this command will be passed through to 'git push',
# e.g. for doing "push -f"
#

# Abort if this isn't a git repository
git rev-parse --is-inside-work-tree >/dev/null || exit $?

# Get parent branch
# https://stackoverflow.com/a/17843908/1973105
function get_parent() {
  git show-branch | grep '*' | grep -v "$(git rev-parse --abbrev-ref HEAD)" | head -n1 | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//'
}

# Colors
color_error="$(tput sgr 0 1)$(tput setaf 1)"
color_reset="$(tput sgr0)"

branch=$(git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/') || exit $?
default_remote="origin"
remote=$(git config "branch.${branch}.remote" || echo "$default_remote")
remote_branch=$( (git config "branch.${branch}.merge" || echo "refs/heads/$branch") | cut -d/ -f3- )

# pull with rebase before push
if [ $(git ls-remote --heads $remote $remote_branch + | wc -l) == "1" ]; then
  echo "🧲 Pull changes from remote before pushing the changes."
  pull=$(git pull --rebase $remote $remote_branch)
fi
exit_code=$?
if [ $exit_code != 0 ]; then
  echo -e "${color_error}⚠️ Ouch, pull failed!${color_reset}\n\n$pull"
  exit $exit_code
elif echo $pull | grep "Everything up-to-date" >/dev/null; then
  echo "✌️  Git says everything is up-to-date!"
fi

# Push & save output
if [ -z $* ]; then
  args="$remote $remote_branch"
else
  args="$*"
fi
push=$(git push --set-upstream $args 2>&1)
exit_code=$?

if [ $exit_code != 0 ]; then
  echo -e "${color_error}Ouch, push failed!${color_reset}\n\n$push"
  exit $exit_code
elif echo $push | grep "Everything up-to-date" >/dev/null; then
  echo "✌️  Git says everything is up-to-date!"
  exit 0
fi

# Parse relevant commit refs and let user know what we did
# 1st-time push to new branch gets special treatment
if echo $push | grep "\[new branch\]" >/dev/null; then
  parent=$(get_parent)
  if [ -z "$parent" ]; then
    parent="main"
  fi
  refs="$parent...$branch"
  echo "🚀  Pushed a new branch '$branch' remotely"
else
  refs=$(echo $push | awk '{ print $3}' | sed 's/\.\./\.\.\./')
  echo "🚀  Pushed:"
  echo "$push"
fi

exit 0
