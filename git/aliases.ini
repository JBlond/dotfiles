[alias]
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	be = branch --edit-description
	br = branch
	# Delete all local branches but master and the current one.
	br-delete-useless-force = "!f(){ git branch | grep -v "master" | grep -v "development" |grep -v ^* | xargs git branch -D; }; f"
	branches = "!git branch -vv"
	changes = diff --name-status -r
	# git chmod +x script.sh / git chmod -x script.sh
	chmod = update-index --chmod
	cm = commit
	cma = commit -a -m
	cmau = commit -a -m "update"
	cmap = "!f() { git commit -a -m \"$@\" && git push; }; f"
	cmapu = "!f() { git commit -a -m \"update\" && git push && echo \"âœ¨ ðŸŒŸ âœ¨\"; }; f"
	co = checkout
	conflicts = diff --name-only --diff-filter=U
	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	delete-remote = "push origin --delete"
	development = checkout development
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	dt = difftool
	# update development, go back to current branch and merge development
	du = "! git checkout development; git pull; git checkout @{-1}; git merge development;"
	email = config user.email
	empty = commit --allow-empty
	# https://blog.filippo.io/git-fixup-amending-an-older-commit/
	fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
	flp = log --follow -p
	github = !git config user.name "JBlond" && git config user.email "leet31337@web.de"
	identity = "! git config user.name \"$(git config user.$1.name)\"; git config user.email \"$(git config user.$1.email)\"; :"
	in = !git remote update -p; git log ..@{u}
	incoming = !git remote update -p; git log ..@{u}
	last = log -1 --stat
	lc = diff @~..@
	last-commit = "!git lc"
	last-tag = describe --tags --abbrev=0
	lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %C(bold blue)<%an>%C(reset)%C(bold yellow)%d%C(reset)' --all
	lgf = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %C(bold blue)<%an>%C(reset)%C(bold yellow)%d%C(reset)' --all --name-status
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold yellow)%d âŸ¹ %C(white)%s %C(bold blue)%an%C(reset) %C(bold green)%cD%C(reset)'
	lgm = log --oneline --abbrev-commit --format=format:'| %as | %s | %h |' --all
	lgn = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %C(bold blue)<%an>%C(reset)%C(bold yellow)%d%C(reset)' --all --name-status
	lgp = "!git lg -p"
	list-branches = branch -vv
	ls = ls-files
	master = checkout master
	main = checkout main
	merged = branch -a --merged
	name = config user.name
	new-branch = checkout -b
	open = "!f() { REPO_URL=$(git config remote.origin.url); explorer ${REPO_URL%%.git}; }; f"
	out = "!f() { C_BRANCH=$(git branch --show-current); git log --graph --abbrev-commit --date=relative origin/${C_BRANCH%%}..${C_BRANCH%%}; }; f"
	patch = !git --no-pager diff --no-color
	remotes = remote -v
	remove-ignored = clean -fX
	rename = mv
	rollback = checkout @~1
	search = "!git rev-list --all | xargs git grep -F"
	shallow = clone --depth 1
	shallow-branch = clone --depth 1 -b
	st = status -sb
	su = submodule update --recursive --remote
	undo = reset --hard
	unpublish = !"git push origin :$(git branch-name)"
	untracked = ls-files --others --exclude-standard
	week = log --stat --since='1 Week Ago' --graph --pretty=oneline --abbrev-commit --date=relative
	who = shortlog -s --
	yesterday = log --after="yesterday"
