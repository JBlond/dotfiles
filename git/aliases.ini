[alias]
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
	ap = add --patch
	br = branch
	# Delete all local branches but master and the current one.
	br-delete-useless-force = "!f(){ git branch | grep -v "master" | grep -v "development" |grep -v ^* | xargs git branch -D; }; f"
	branches = "!git branch -vv"
	changes = diff --name-status -r
	cl = clone
	clog = "!git lg -p"
	cm = commit
	cma = commit -a -m
	cmap = "!f() { git commit -a -m \"$@\" && git push; }; f"
	cmapu = "!f() { git commit -a -m \"update\" && git push; }; f"
	co = checkout
	conflicts = diff --name-only --diff-filter=U
	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	development = checkout development
	email = config user.email
	github = !git config user.name "JBlond" && git config user.email "leet31337@web.de"
	in = !git remote update -p; git log ..@{u}
	incoming = !git remote update -p; git log ..@{u}
	last = log -1 --stat
	lc = diff @~..@
	last-commit = "!git lc"
	last-tag = describe --tags --abbrev=0
	lg = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %C(bold blue)<%an>%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold yellow)%d ⟹ %C(white)%s %C(bold blue)%an%C(reset) %C(bold green)%cD%C(reset)'
	lg3 = log --graph --abbrev-commit --decorate --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)'
	lg4 = log --graph --abbrev-commit --decorate --format=format:'%C(bold yellow) ⟹ %C(white)%s %C(bold blue)%an%C(reset) %C(reset)'
	list-branches = branch -vv
	ls = ls-files
	master = checkout master
	merged = branch -a --merged
	name = config user.name
	new-branch = checkout -b
	open = "!f() { REPO_URL=$(git config remote.origin.url); explorer ${REPO_URL%%.git}; }; f"
	out = log --graph --abbrev-commit --date=relative origin/master..master
	patch = !git --no-pager diff --no-color
	remotes = remote -v
	remove-ignored = clean -fX
	rename = mv
	rollback = checkout @~1
	shallow = clone --depth 1
	shallow-branch = clone --depth 1 -b
	st = status -sb
	su = submodule update --recursive --remote
	untracked = ls-files --others --exclude-standard
	undo = reset --hard
	week = log --stat --since='1 Week Ago' --graph --pretty=oneline --abbrev-commit --date=relative
	who = shortlog -s --
